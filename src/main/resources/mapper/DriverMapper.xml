<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dgwl.dao.DriverDao">


    <select id="selectDriver" resultType="Map">
        select t1.id,t1.name,t1.age,t1.tel,t1.cardId,t1.driveAge,DATE_FORMAT(t1.updateTime,'%Y-%m-%d') as updateTime,
            case when t2.number is null then '未配车' else t2.number end as hasCar,
            IFNULL(t2.id,0) as carId, case when t3.to is null then '-' else t3.to end as hashOrder
        from driver t1 left join car t2  on (t1.carId = t2.id)
        left join `order` t3 on (t1.id = t3.driverId and t3.status !='已完成')
        where 1=1
        <if test="name!=null and name !=''">
            and t1.name like '%${name}%'
        </if>
        <if test="driveAge!=null">
            and t1.driveAge >= ${driveAge}
        </if>
    </select>

    <insert id="insertDriver" parameterType="Driver">
        insert into driver(id,name,age,tel,cardId,driveAge,carId)
        values (null,'${name}', ${age}, ${tel}, '${cardId}', ${driveAge}, ${carId} )
    </insert>

    <update id="updateDriver" parameterType="Driver">
        update driver set name = '${name}', age = ${age}, tel = ${tel}, cardId = '${cardId}',
        driveAge = ${driveAge}, carId=${carId} where id = ${id}
    </update>

    <delete id="deleteDriver">
        delete from driver where id = ${value}
    </delete>

</mapper>
